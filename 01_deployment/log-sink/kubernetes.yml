# oc set env deployment/log-sink CAMEL_KAMELET_LOG_SINK_SHOW_HEADERS=true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    eventing.knative.dev/connector: log-sink
    app.kubernetes.io/name: log-sink
  name: log-sink
spec:
  replicas: 1
  selector:
    matchLabels:
      eventing.knative.dev/connector: log-sink
      app.kubernetes.io/name: log-sink
  template:
    metadata:
      labels:
        eventing.knative.dev/connector: log-sink
        app.kubernetes.io/name: log-sink
    spec:
      containers:
        - image: quay.io/openshift-knative/log-sink:1.0-SNAPSHOT
          imagePullPolicy: IfNotPresent
          name: log-sink
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/ready
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          startupProbe:
            failureThreshold: 3
            httpGet:
              path: /q/health/started
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: log-sink
  name: log-sink
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    app.kubernetes.io/name: log-sink
  type: ClusterIP
---
apiVersion: eventing.knative.dev/v1
kind: Trigger
metadata:
  annotations:
    eventing.knative.dev/creator: kn-connectors
  labels:
    eventing.knative.dev/connector: log-sink
    eventing.knative.dev/broker: default
    app.kubernetes.io/name: log-sink
  name: log-sink
spec:
  broker: default
  subscriber:
    ref:
      apiVersion: v1
      kind: Service
      name: log-sink
